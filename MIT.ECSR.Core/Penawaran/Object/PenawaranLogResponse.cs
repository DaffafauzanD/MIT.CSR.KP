//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using MIT.ECSR.Core.Helper;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using MIT.ECSR.Data.Model;
using MIT.ECSR.Shared.Attributes;

namespace MIT.ECSR.Core.Response
{
    public partial class PenawaranLogResponse : IMapResponse<PenawaranLogResponse, TrsPenawaranItem>
    {
        public Guid Id { get; set; }
        public DateTime? ApprovedAt { get; set; }
        public string ApprovedBy { get; set; }
        public string CreateBy { get; set; }
        public DateTime CreateDate { get; set; }
        public string Notes { get; set; }
        public int Status { get; set; }
        public Guid IdPerusahaan { get; set; }
        public string Perusahaan { get; set; }
        public MediaUrl PerusahaanLogo { get; set; }
        public string DeskripsiPenawaran { get; set; }
        public List<MediaUrl> LampiranPenawaran { get; set; }
        public Guid IdProgram { get; set; }
        public string ProgramName { get; set; }
        public Guid IdProgramItem { get; set; }
        public string ProgramItemName { get; set; }
        public PenawaranValueObject Penawaran { get; set; }
        public PenawaranValueObject Total { get; set; }
        public PenawaranValueObject Sisa { get; set; }
        public string SatuanUnit { get; set; }


        public void Mapping(IMappingExpression<TrsPenawaranItem, PenawaranLogResponse> map)
        {
            map.ForMember(d => d.Perusahaan, opt => opt.MapFrom(s => s.IdPenawaranNavigation.IdPerusahaanNavigation.NamaPerusahaan))
                .ForMember(d => d.DeskripsiPenawaran, opt => opt.MapFrom(s => s.IdPenawaranNavigation.Deskripsi))
                .ForMember(d => d.IdProgram, opt => opt.MapFrom(s => s.IdProgramItemNavigation.IdProgram))
                .ForMember(d => d.ProgramName, opt => opt.MapFrom(s => s.IdProgramItemNavigation.IdProgramNavigation.NamaProgram))
                .ForMember(d => d.IdProgramItem, opt => opt.MapFrom(s => s.IdProgramItem))
                .ForMember(d => d.ProgramItemName, opt => opt.MapFrom(s => s.IdProgramItemNavigation.Nama))
                .ForMember(d => d.SatuanUnit, opt => opt.MapFrom(s => s.IdProgramItemNavigation.SatuanUnit))
                .ForMember(d => d.Penawaran, opt => opt.MapFrom(s => new PenawaranValueObject()
                {
                    Jumlah = s.Jumlah,
                    Rupiah = s.Rupiah
                }))
                .ForMember(d => d.Total, opt => opt.MapFrom(s => new PenawaranValueObject()
                {
                    Jumlah = s.IdProgramItemNavigation.Jumlah,
                    Rupiah = s.IdProgramItemNavigation.Rupiah
                }));

        }
    }
    public class PenawaranValueObject
    {
        public double Jumlah { get; set; }
        public double? Rupiah { get; set; }
    }
}

