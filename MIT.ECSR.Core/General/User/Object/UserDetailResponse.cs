//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using MIT.ECSR.Core.Helper;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using MIT.ECSR.Data.Model;
using MIT.ECSR.Shared.Attributes;

namespace MIT.ECSR.Core.Response
{
    public partial class UserDetailResponse : IMapResponse<UserDetailResponse, MIT.ECSR.Data.Model.SetUser>
    {
		public Guid Id{ get; set; }
        public string Username { get; set; }
        public string Fullname { get; set; }
        public string Nrk { get; set; }
        public string Mail { get; set; }
        public string Token { get; set; }
        public string PhoneNumber { get; set; }
        public string Status { get; set; }
        public RoleObject Role { get; set; }
        public string CreateBy{ get; set; }
		public DateTime CreateDate{ get; set; }
        public string UpdateBy { get; set; }
        public DateTime? UpdateDate { get; set; }
        public PerusahaanResponse Perusahaan { get; set; }
        public MediaUrl Photo { get; set; }

        public void Mapping(IMappingExpression<MIT.ECSR.Data.Model.SetUser, UserDetailResponse> map)
        {
            map.ForMember(d => d.Status, opt => opt.MapFrom(s => CheckStatus(s))).
                ForMember(d => d.Perusahaan, opt => opt.Ignore())
              .ForMember(d => d.Role, opt => opt.MapFrom(s => new RoleObject()
              {
                  Id = s.IdRole,
                  Name = s.IdRoleNavigation.Name
              }));
        }
        private string CheckStatus(MIT.ECSR.Data.Model.SetUser s)
        {
            if (!s.Active)
                return "Not Active";
            else
                return "Active";
        }
    }
}

