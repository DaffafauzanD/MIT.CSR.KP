//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using AutoMapper;
using MediatR;
using WonderKid.DAL.Interface;
using Microsoft.EntityFrameworkCore;
using System.Linq.Expressions;
using Microsoft.Extensions.Logging;
using MIT.ECSR.Data;
using MIT.ECSR.Data.Model;
using MIT.ECSR.Shared.Attributes;
using MIT.ECSR.Core.Response;
using MIT.ECSR.Core.Helper;

namespace MIT.ECSR.Core.Role.Query
{
    public class GetRoleListRequest : ListRequest, IListRequest<GetRoleListRequest>, IRequest<ListResponse<RoleObject>>
    {
    }
    internal class GetRoleListHandler : IRequestHandler<GetRoleListRequest, ListResponse<RoleObject>>
    {
        private readonly ILogger _logger;
        private readonly IMapper _mapper;
        private readonly IUnitOfWork<ApplicationDBContext> _context;
        public GetRoleListHandler(
            ILogger<GetRoleListHandler> logger,
            IMapper mapper,
            IUnitOfWork<ApplicationDBContext> context
            )
        {
            _logger = logger;
            _mapper = mapper;
            _context = context;
        }

        public async Task<ListResponse<RoleObject>> Handle(GetRoleListRequest request, CancellationToken cancellationToken)
        {
            ListResponse<RoleObject> result = new ListResponse<RoleObject>();
            try
            {
				result.List = await _context.Entity<MIT.ECSR.Data.Model.SetRole>().Select(d => new RoleObject()
				{
					Id = d.Id,
					Name = d.Name
				}).ToListAsync();
				result.Filtered = result.List.Count();
				result.Count = result.List.Count();
				result.OK();
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Failed Get List Role", request);
                result.Error("Failed Get List Role", ex.Message);
            }
            return result;
        }

    }
}

