//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using MIT.ECSR.Core.Helper;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using MIT.ECSR.Data.Model;
using MIT.ECSR.Shared.Attributes;

namespace MIT.ECSR.Core.Response
{
    public partial class MediaResponse : IMapResponse<MediaResponse, MIT.ECSR.Data.Model.TrsMedia>
    {

        public Guid Id { get; set; }
        public string CreateBy { get; set; }
        public DateTime CreateDate { get; set; }
        public string Extension { get; set; }
        public string FileName { get; set; }
        public bool IsImage { get; set; }
        public string Modul { get; set; }
        public MediaUrl Url { get; set; }
        public string Tipe { get; set; }


        public void Mapping(IMappingExpression<MIT.ECSR.Data.Model.TrsMedia, MediaResponse> map)
        {
            //use this for mapping
            map.ForMember(d => d.Url, opt => opt.MapFrom(s => new MediaUrl()
            {
                Original = ConstantApplication.BaseUrl + s.OriginalPath,
                Resize = ConstantApplication.BaseUrl + s.ResizePath
            }));
        }
    }
    public class MediaUrlResponse : IMapResponse<MediaUrlResponse, MIT.ECSR.Data.Model.TrsMedia>
    {
        public string Modul { get; set; }
        public MediaUrl Media { get; set; }
        public void Mapping(IMappingExpression<MIT.ECSR.Data.Model.TrsMedia, MediaUrlResponse> map)
        {
            //use this for mapping
            map.ForMember(d => d.Media, opt => opt.MapFrom(s => new MediaUrl()
            {
                Original = ConstantApplication.BaseUrl + s.OriginalPath,
                Resize = ConstantApplication.BaseUrl + s.ResizePath
            }));

        }
    }
}

